

services:
  embedding-service:
    build: ./embedding-service # Path to the directory containing the Dockerfile
    container_name: embedding_service_app
    ports:
      - "8000:8000" # Map host port 8000 to container port 8000
    environment:
      # Add any environment variables your service might need
      # - PYTHONUNBUFFERED=1 # Often useful for seeing logs immediately
      - SENTENCE_TRANSFORMERS_HOME=/app/models # Optional: Cache models inside container volume if needed
    volumes:
      # Optional: Mount a volume to persist downloaded sentence-transformer models
      # This avoids re-downloading on container recreation if the base image doesn't change much.
      - embedding_models:/app/models
    restart: unless-stopped # Restart policy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s # Give time for model download/load

  chromadb:
    image: chromadb/chroma:0.5.0   # Keep the specific version
    container_name: chromadb_server
    ports:
      - "8101:8000"
    # REMOVE THE ENTIRE environment BLOCK BELOW
    # environment:
    #   - CHROMA_API_IMPL=rest
    #   - IS_PERSISTENT=TRUE
    volumes:
      - chroma_data:/chroma/chroma # Persistence is handled by this volume
    restart: unless-stopped
    # Keep or remove healthcheck based on whether /api/v1/heartbeat works
    # or if you find a v2 equivalent like /api/v2/heartbeat or /healthz
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat" ] # Adjust or remove if needed
      interval: 30s
      timeout: 10s
      retries: 3


volumes:
  chroma_data: # Define the named volume for ChromaDB persistence
  embedding_models: # Define the named volume for sentence-transformer models