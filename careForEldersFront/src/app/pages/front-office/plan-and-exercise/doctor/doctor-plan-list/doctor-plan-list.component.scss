// Use Angular Material theming. Import your theme file if you have one.
// @use '@angular/material' as mat;
// @include mat.core(); // Ensure this is called once in your application, typically in global styles.

// If you have a custom theme:
// $my-primary: mat.define-palette(mat.$indigo-palette);
// $my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
// $my-warn: mat.define-palette(mat.$red-palette);
// $my-theme: mat.define-light-theme((
//   color: (
//     primary: $my-primary,
//     accent: $my-accent,
//     warn: $my-warn,
//   )
// ));
// @include mat.all-component-themes($my-theme);

:host {
  display: block;
  padding: 20px; // Add some padding around the entire component
  background-color: #f9f9f9; // A light background for the page
}

.doctor-plan-list-container {
  max-width: 1400px; // Max width for larger screens
  margin: 0 auto;   // Center the content
}

.header-controls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  flex-wrap: wrap; // Allow wrapping on smaller screens
  gap: 16px;

  .component-title {
    font-size: 1.8rem; // Larger title
    font-weight: 500;
    color: #333; // Darker color for title
    margin: 0;
  }

  button[mat-raised-button] {
    mat-icon {
      margin-right: 8px;
    }
  }
}

.filter-input {
  width: 100%;
  margin-bottom: 24px;

  .mat-mdc-form-field-infix { // Target Material 15+ class for outline input
    padding-top: 0.8em !important;
    padding-bottom: 0.8em !important;
  }
   mat-icon[matSuffix] {
    color: #757575; // Softer color for search icon
  }
}

.table-wrapper {
  position: relative; // For the loading shade
  border-radius: 8px; // Softer corners
  overflow-x: auto;   // Enable horizontal scrolling
  background-color: #fff; // White background for the table container
}

.loading-shade {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: rgba(255, 255, 255, 0.85); // Semi-transparent white
  z-index: 100; // Ensure it's above the table
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;

  p {
    margin-top: 12px;
    font-size: 1rem;
    color: #555;
  }
}

table[mat-table] {
  width: 100%;
  min-width: 900px;
  th.mat-header-cell, td.mat-cell {
    padding: 12px 16px; // Consistent padding
  }

  th.mat-header-cell {
    font-weight: 500; // Slightly bolder headers
    color: rgba(0, 0, 0, 0.65); // Header text color
    // Consider text-transform: uppercase; letter-spacing: 0.5px; for more distinct headers
  }

  .table-row {
    &:hover {
      background-color: rgba(0, 0, 0, 0.03); // Subtle hover for rows
    }
    &:nth-child(even) {
      // background-color: #fcfcfc; // Very subtle zebra striping if desired
    }
  }

  .right-align-header {
    text-align: right;
    justify-content: flex-end; // For mat-sort-header
  }
  .right-align-cell {
    text-align: right;
  }

  .actions-header {
    text-align: center; // Center "Actions" header text
  }

  .actions-cell {
    display: flex;
    gap: 4px; // Reduced gap for icon buttons
    align-items: center;
    justify-content: center; // Center action buttons
    white-space: nowrap; // Prevent wrapping of buttons
  }
}

// No data row styling
.no-data-cell {
  text-align: center;
  padding: 40px 16px !important;
  color: #757575; // Material Grey 700

  .no-data-icon {
    font-size: 48px;
    width: 48px;
    height: 48px;
    margin-bottom: 12px;
    color: #bdbdbd; // Material Grey 400
  }
  p {
    margin: 4px 0;
    font-size: 1rem;
  }
}

mat-paginator {
  border-top: 1px solid rgba(0, 0, 0, 0.12); // Separator line for paginator
  // Consider background-color: #f9f9f9; if you want it slightly different from table
}

// Custom snackbar panel classes (optional, add to global styles if used widely)
// In your global styles.scss:
// .success-snackbar { .mdc-snackbar__surface { background-color: mat.get-color-from-palette($my-primary) !important; } }
// .warn-snackbar { .mdc-snackbar__surface { background-color: mat.get-color-from-palette($my-warn) !important; } }

// Responsive adjustments for smaller screens (optional)
@media (max-width: 768px) {
  .header-controls {
    flex-direction: column;
    align-items: stretch; // Make button full width on small screens

    .component-title {
      text-align: center;
      margin-bottom: 16px;
    }
  }

  // You might want to hide less critical columns on very small screens
  // e.g., .mat-column-createdAt { display: none; }
  // Or implement a more complex responsive table pattern.
}