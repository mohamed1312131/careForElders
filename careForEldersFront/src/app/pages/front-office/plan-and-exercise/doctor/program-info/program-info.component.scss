// Option A: Within your component's SCSS file (requires potentially disabling view encapsulation or using a global style)
/* In your component's SCSS file (e.g., your-component.scss) */
/* If you must pierce encapsulation, use a global style or a mixin included globally */

// Using a global style approach (put this in styles.scss or a theme file)
mat-expansion-panel-header {
    padding: 16px 24px; // Add padding
    background-color: var(--expansion-header-bg, #f8fafc); // Use a CSS variable for flexibility
    transition: background-color 0.2s ease-in-out; // Smooth transition for states
    border-bottom: 1px solid var(--expansion-header-border, #e2e8f0); // Subtle border
  
    // Style for the content within the header (title, description)
    .mat-content {
      // Add styles for text color, font weight etc.
      color: var(--expansion-header-text, #333);
    }
  
    // Hover state
    &:hover:not([aria-disabled='true']) {
      background-color: var(--expansion-header-bg-hover, #f1f5f9); // Slightly darker on hover
    }
  
    // Focus state (ensure clear outline)
    &:focus {
      outline: 2px solid var(--expansion-header-outline, #3b82f6); // Blue outline example
      outline-offset: -2px; // Ensure outline stays within bounds
    }
  
    // Expanded state
    &[aria-expanded='true'] {
      background-color: var(--expansion-header-bg-expanded, #e2e8f0); // Different background when expanded
      font-weight: 600; // Make text bold when expanded (optional)
  
      // Style the expansion indicator icon if needed
      .mat-expansion-indicator::after {
        color: var(--expansion-header-indicator-expanded, #0f172a); // Darker icon color
      }
    }
  
    // Style the expansion indicator icon
    .mat-expansion-indicator::after {
       color: var(--expansion-header-indicator, #64748b); // Default icon color
    }
  }
  
  // Option B: Leveraging Angular Material Theming (BEST PRACTICE in Angular)
  // This involves defining styles within your Material theme file (_theme.scss).
  // You would define a custom palette or override component styles within the theme.
  // This is more involved and requires understanding Angular Material's theming but is the most maintainable approach.
  // Example (conceptual, requires proper theme structure):
  /*
  .my-custom-theme {
    .mat-expansion-panel-header {
      // ... your styles here, using theme variables ...
    }
  }
  */
  /* In your component's SCSS file (e.g., your-component.scss) */
/* If you need to pierce encapsulation, use a global style or a mixin included globally */

// Using a global style approach (put this in styles.scss)
mat-expansion-panel-header {
    @apply px-6 py-4 bg-gray-50 border-b border-gray-200 transition duration-200 ease-in-out; // Base styles
  
    // Apply hover state utilities
    &:hover:not([aria-disabled='true']) {
      @apply bg-gray-100; // Slightly darker background on hover
    }
  
    // Apply focus state utilities
    &:focus {
      @apply outline-none ring-2 ring-blue-500 ring-offset-2; // Focus ring
    }
  
    // Apply expanded state utilities
    &[aria-expanded='true'] {
      @apply bg-gray-200 font-semibold; // Different background and bold font when expanded
    }
  
    // Style for the content within the header
    .mat-content {
      @apply text-gray-800; // Text color
    }
  
    // Style the expansion indicator icon
     .mat-expansion-indicator::after {
      @apply text-gray-500; // Default icon color
     }
  
    &[aria-expanded='true'] .mat-expansion-indicator::after {
      @apply text-gray-900; // Darker icon color when expanded
    }
  }

  /* program-info.component.scss */
.loading-spinner {
  display: flex;
  justify-content: center;
  padding: 2rem;
}

.error-message {
  color: #dc3545;
  text-align: center;
  padding: 2rem;
}

.exercise-video-link {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  mat-icon {
    font-size: 1rem;
    height: 1rem;
    width: 1rem;
  }
}