name: Fullstack CI/CD with Nexus & SonarQube

on:
  push:
    branches:
      - '**'

jobs:
  build-and-deploy:
    runs-on: self-hosted  # Must be able to access local Nexus/SonarQube

    steps:
      # ========== CHECKOUT ==========
      - name: Checkout Code
        uses: actions/checkout@v3

      # ========== SONARQUBE ANALYSIS ==========
      - name: Run SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "http://10.0.2.15:9000"
        run: |
          docker run --network=host \
            -e SONAR_HOST_URL="$SONAR_HOST_URL" \
            -e SONAR_TOKEN="$SONAR_TOKEN" \
            -v "$(pwd):/usr/src" \
            sonarsource/sonar-scanner-cli:latest \
            -Dsonar.projectKey=careForElders \
            -Dsonar.java.binaries=./careForEldersBack/target/classes

      # ========== FRONTEND ==========
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        working-directory: careForEldersFront
        run: npm ci

      - name: Build Angular App
        working-directory: careForEldersFront
        run: npm run build -- --configuration=production --project=testApp

      # ========== BACKEND MAVEN SETUP ==========
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Configure Maven for Nexus
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>nexus-releases</id>
                <username>${{ secrets.NEXUS_USERNAME }}</username>
                <password>${{ secrets.NEXUS_PASSWORD }}</password>
              </server>
              <server>
                <id>nexus-snapshots</id>
                <username>${{ secrets.NEXUS_USERNAME }}</username>
                <password>${{ secrets.NEXUS_PASSWORD }}</password>
              </server>
            </servers>
          </settings>
          EOF

      # ========== BUILD + DEPLOY TO MAVEN NEXUS ==========
      - name: Build and Deploy Java Services to Nexus
        working-directory: careForEldersBack
        run: |
          mvn clean package -DskipTests  # Required for SonarQube analysis
          mvn deploy -DskipTests -pl user-service,planAndExercise,service-registry,api-gateway -am \
          -DaltReleaseDeploymentRepository=nexus-releases::default::http://10.0.2.15:8090/repository/maven-releases/ \
          -DaltSnapshotDeploymentRepository=nexus-snapshots::default::http://10.0.2.15:8090/repository/maven-snapshots/

      # ========== DOCKER NEXUS ==========
      - name: Login to Nexus Docker Registry
        run: |
          echo "${{ secrets.NEXUS_PASSWORD }}" | docker login http://10.0.2.15:8090 -u ${{ secrets.NEXUS_USERNAME }} --password-stdin

      - name: Build and Push Docker Images to Nexus
        run: |
          services=("user-service" "planAndExercise" "api-gateway" "service-registry")
          for service in "${services[@]}"; do
            docker build -t 10.0.2.15:8090/$service ./careForEldersBack/$service
            docker push 10.0.2.15:8090/$service
          done

          docker build -t 10.0.2.15:8090/carefrontend ./careForEldersFront
          docker push 10.0.2.15:8090/carefrontend
